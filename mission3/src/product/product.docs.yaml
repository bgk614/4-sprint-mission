paths:
  /products:
    get:
      tags:
        - product
      summary: 상품 목록 조회
      operationId: getProductList
      description: Returns a product List
      parameters:
        - name: limit
          in: query
          description: 조회할 상품 개수 (기본 10)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: 건너뛸 상품 개수 (기본 0)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sort
          in: query
          description: 정렬 기준. 'recent'면 최신순 정렬
          required: false
          schema:
            type: string
            enum: [recent, '']
            default:
        - name: search
          in: query
          description: 상품명 또는 설명에서 검색 키워드
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: (OK) 성공적으로 상품 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: 상품 이름
                    price:
                      type: integer
                      example: 100000
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-08-01T12:00:00Z'
        '400':
          description: (Bad Request)
        '404':
          description: (Not Found)
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/GenericError'
    post:
      tags:
        - product
      summary: 상품 등록
      operationId: postProductWithForm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: '상품 이름'
                  type: string
                description:
                  description: '상품 설명'
                  type: string
                price:
                  description: '상품 가격'
                  type: integer
                tags:
                  description: '상품 태그'
                  type: array
                  items:
                    type: string
              required:
                - name
                - description
                - price
                - tags
      responses:
        '201':
          description: (Created)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '200':
          description: (OK)
        '204':
          description: (No Content)
        '400':
          $ref: '#/components/responses/GenericError'
        '500':
          $ref: '#/components/responses/GenericError'
  /products/{productId}:
    get:
      tags:
        - product
      summary: 상품 조회
      operationId: getProductById
      description: Returns a single product
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: (OK)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '204':
          description: (No Content)
          $ref: '#/components/schemas/204NoContent'
        '400':
          description: (BAD REQUEST)
          $ref: '#components/schemas/400BadRequest'
        '404':
          description: (NOT FOUND)
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/GenericError'
    patch:
      tags:
        - product
      summary: 상품 수정
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: (OK) 성공적으로 상품 수정됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '204':
          description: (No Content)
        '404':
          description: (Not Found)
          $ref: '#/components/responses/404NotFound'
        '405':
          description: (Method not allowed)
        '500':
          $ref: '#/components/responses/GenericError'
    delete:
      tags:
        - product
      summary: 상품 삭제
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: 삭제할 상품 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: (OK)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product deleted successfully
        '202':
          description: (Accepted)
        '204':
          description: (No Content)
        '404':
          description: (Not Found)
          $ref: '#/components/responses/404NotFound'
        '405':
          description: (Method not allowed)
        '500':
          $ref: '#/components/responses/GenericError'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 상품 이름
        description:
          type: string
          example: 상품 설명
        price:
          type: integer
          example: 100000
        tags:
          type: array
          items:
            type: string
          example: ['카테고리1', '카테고리2']
        createdAt:
          type: date-time
          example: '2025-08-01T12:00:00Z'
        updatedAt:
          type: date-time
          example: '2025-08-01T12:00:00Z'
    Error:
      type: object
      properties:
        message:
          type: string
          example: Error message
  parameters:
    offsetParam:
      name: offset
      in: query
      description: Number of items to skip before returning the results.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    limitParam:
      name: limit
      in: query
      description: Maximum number of items to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
  responses:
    404NotFound:
      description: 지정된 자원을 찾을 수 없음
    ImageResponse:
      description: An image.
      content:
        image/*:
          schema:
            type: string
            format: binary
    GenericError:
      description: 에러 발생
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
